[user]
	name = Will Manning
	email = wmanning@palantir.com
[branch]
	autosetuprebase = always
[alias]
	st = status
	co = checkout
	cp = cherry-pick
	last = log -1
	hlog = log --all --date-order --graph --format=\"%C(green)%H%Creset %C(yellow)%an%Creset %C(blue bold)%ad%Creset %C(red bold)%d%Creset%s\"
        br = branch --color -v
        rb = rebase
        rbi = rebase -i origin/master
        ls = log --stat
	staged = diff --cached --color
	d = diff --color-words
	gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
	amend = commit --amend -C HEAD
	recents = for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads
	hist = log -p -M -C --find-copies-harder --follow
	cr = "!git push origin HEAD:`git config branch.$(git rev-parse --abbrev-ref HEAD).merge | sed 's/heads/for/'`"
	gerrit-push = "!branch=$(git symbolic-ref HEAD | sed s#^refs/heads/##); test -z \"$branch\" && { echo \"Error: Are you in the middle of a rebase?  You have no branch checked out.\"; exit 1; } ; remote=$(git config branch.$branch.remote); test -z \"$remote\" && { echo \"Error: You have not set which remote branch you are tracking\"; exit 1; } ; git push $remote $branch:refs/for/$(git rev-parse --symbolic-full-name @{upstream} | sed s#^refs/remotes/$remote/##)"
[core]
	pager = less -FrX --ignore-case
	editor = emacs
[push]
	default = simple
[color]
	diff = always
	branch = auto
	interactive = auto
	ui = auto
[gc]
	auto = 0
[url "https://"]
	insteadOf = git://
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
